//
// SemanticSearchRequestPersonalize.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

/** Personalize the ranking of candidates based on a users preferences */
public struct SemanticSearchRequestPersonalize: Codable, JSONEncodable, Hashable {

    /** If true do not include documents the user has already seen as search candidate.  A trimmed version of the users history might be used for this filter.  This option is incompatible with not specifying a user.  */
    public var excludeSeen: Bool? = true
    public var user: InputUser

    public init(excludeSeen: Bool? = true, user: InputUser) {
        self.excludeSeen = excludeSeen
        self.user = user
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case excludeSeen = "exclude_seen"
        case user
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(excludeSeen, forKey: .excludeSeen)
        try container.encode(user, forKey: .user)
    }
}

